{"componentChunkName":"component---src-pages-blog-mdx-slug-js","path":"/blog/the-simplest-darkmode/","result":{"data":{"mdx":{"frontmatter":{"title":"The Simplest Darkmode","date":"August 13, 2021"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Simplest Darkmode\",\n  \"date\": \"2021-08-13\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this Friday the 13\", mdx(\"sup\", null, \"th\"), \", let's get dark. In this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/akhilarjun/one-line-dark-mode-using-css-24li\"\n  }, \"article\"), \" there's a really simple definition of darkmode that I want to try.\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/filter\"\n  }, \"filter\"), \" css property is new to me, so I'll certainly use it more in the future. But what I did for this implementation was perhaps the most un-react, un-gatsby thing ever: I created the dark class but changed it in the default javascript way, which meant getting the class name that was generated.\"), mdx(\"p\", null, \"I'm sure there's a less hacky and awlful way to do this, but let's say it adds to today's horror theme :).\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"885eda54-baaf-5017-b5b0-11fabb2f7fc8","slug":"the-simplest-darkmode","__params":{"slug":"the-simplest-darkmode"}}},"staticQueryHashes":["2744905544","3159585216"]}