(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{332:function(t,e,r){"use strict";r.r(e);var a=r(5),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("This Friday the 13"),e("sup",[t._v("th")]),t._v(", let's get dark. In this "),e("a",{attrs:{href:"https://dev.to/akhilarjun/one-line-dark-mode-using-css-24li",target:"_blank",rel:"noopener noreferrer"}},[t._v("article"),e("OutboundLink")],1),t._v(", there's a really simple definition of dark mode that I want to try.")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("filter"),e("OutboundLink")],1),t._v(" CSS property is new to me, so I'll certainly use it more in the future. But what I did for this implementation was perhaps the most un-react, un-gatsby thing ever: I created the dark class but changed it in the default javascript way, which meant getting the class name that was generated.")]),t._v(" "),e("p",[t._v("I'm sure there's a less hacky and awful way to do this, but let's say it adds to today's horror theme ðŸ˜ƒ.")])])}),[],!1,null,null,null);e.default=n.exports}}]);